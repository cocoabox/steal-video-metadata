(async()=>{let t=(t,e)=>{var i=document.createElement("a");i.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(e)),i.setAttribute("download",t),i.style.display="none",document.body.appendChild(i),i.click(),document.body.removeChild(i)},e=[{domain:"www.b-ch.com",async func(){console.log("** b-ch **");let t=window.location.href.match(/\/titles\/([0-9]+)?/)?.[1];if(!t){alert("cannot get title from URL ; not bandai ch page ??");return}let e=`https://image2.b-ch.com/ttl2/${t}/`,i=`https://www.b-ch.com/json/titles/${t}.json`;console.log({json_url:i,img_dir:e});let o;try{o=await jQuery.getJSON(i)}catch(a){return console.warn("failed to get json because :",a),!1}console.log("fetched :",o);let n=o.map(t=>({ep:t.stry_sq,title:`${t.strysu_txt} ${t.strytitle_txt}`,synop:t.outline1_txt??t.outline2_txt,img_href:`${e}/${t.thumnail1file_txt}`})),r=$("#bch-summary .bch-c-heading-2__ttl").text(),l=$("#bch-summary .bch-p-heading-mov__detail p").clone().children().remove().end().text().trim();return{series_title:r,json:JSON.stringify({series_title:r,series_synop:l,episodes:n})}}},{domain:"animestore.docomo.ne.jp",async func(){let t=$(".information h1").clone().children().remove().end().text().trim(),e=$(".outlineContainer p").clone().children().remove().end().text().trim(),i=Array.prototype.slice.call(document.querySelectorAll('[id^="episodePartId"]')).map(t=>t.href.match(/partId=([0-9]+)/)?.[1]).filter(t=>!!t).map(t=>`https://animestore.docomo.ne.jp/animestore/rest/WS030101?partId=${t}`),o=[];for(let[a,n]of Object.entries(i)){let r=await jQuery.getJSON(n);o.push({ord:a,json:r})}let l=o.map(({ord:t,json:e})=>({ep:1+parseInt(t),title:`${e.partDispNumber}. ${e.partTitle}`,synop:e.partExp,img_href:e.mainScenePath}));return{series_title:t,json:JSON.stringify({series_title:t,series_synop:e,episodes:l})}}},{domain:"www.amazon.co.jp",async func(){let t=document.querySelector('[data-automation-id="title"]')?.innerText.trim(),e=document.querySelector('[data-automation-id="atf-synopsis"]')?.innerText.trim(),i=document.querySelectorAll('[id^="av-ep-episodes"]'),o=[];for(let a of i){let n=a.querySelector('[data-automation-id^="ep-title-episodes-"] .js-episode-title-name')??a.querySelector('[data-automation-id^="ep-title-episodes-"]'),r=n.innerText.trim();console.log(r);let l=r.match(/^([0-9]+)\.*\s*(.*)$/);l||console.warn("failed to match title :",r);let s=parseFloat(l[1].trim()??-1),m=l[2].trim(),c=a.querySelector('[data-automation-id^="synopsis-"]'),d=c.innerText.trim(),p=a.querySelector("img"),u=p?.src;o.push({ep:s,title:m,synop:d,img_href:u})}return{series_title:t,json:JSON.stringify({series_title:t,series_synop:e,episodes:o})}}},],{json:i,series_title:o}=await e.find(t=>t.domain===window.location.host)?.func()??{};if(!i){window.alert("invalid domain (supported : "+e.map(t=>t.domain).join(",")+")");return}t(`${o}.json.txt`,i);let a=window.open();a.document.write(i)})();